# Use the official .NET 9.0 runtime as base image
FROM mcr.microsoft.com/dotnet/aspnet:9.0 AS base
WORKDIR /app
EXPOSE 8080
EXPOSE 8081

# Use the .NET 9.0 SDK for building
FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build
ARG BUILD_CONFIGURATION=Release
WORKDIR /src

# Copy project files and restore dependencies
COPY ["garage-door-extensions-backend/garage-door-extensions-backend.csproj", "garage-door-extensions-backend/"]
COPY ["garage-door-extensions-backend-services/garage-door-extensions-backend-services.csproj", "garage-door-extensions-backend-services/"]
COPY ["garage-door-extensions-backend-core/garage-door-extensions-backend-core.csproj", "garage-door-extensions-backend-core/"]

# Restore dependencies
RUN dotnet restore "garage-door-extensions-backend/garage-door-extensions-backend.csproj"

# Copy all source files
COPY garage-door-extensions-backend/ garage-door-extensions-backend/
COPY garage-door-extensions-backend-services/ garage-door-extensions-backend-services/
COPY garage-door-extensions-backend-core/ garage-door-extensions-backend-core/

# Build the application
WORKDIR "/src/garage-door-extensions-backend"
RUN dotnet build "garage-door-extensions-backend.csproj" -c $BUILD_CONFIGURATION -o /app/build

# Publish the application
FROM build AS publish
ARG BUILD_CONFIGURATION=Release
RUN dotnet publish "garage-door-extensions-backend.csproj" -c $BUILD_CONFIGURATION -o /app/publish /p:UseAppHost=false

# Run efcore migrations
FROM publish AS migrations
COPY --from=publish /app/publish .
RUN dotnet tool install --version 9.0.7 --global dotnet-ef
ENV PATH="${PATH}:/root/.dotnet/tools"

# Create a non-root user for security
RUN adduser --disabled-password --home /app --gecos '' appuser && mkdir -p /data && chown -R appuser /data && chown -R appuser /app
USER appuser

ENTRYPOINT [ "dotnet-ef", "database", "update", "garage-door-extensions-backend.dll" ]
