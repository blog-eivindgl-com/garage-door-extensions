// <auto-generated />
using System;
using BlogEivindGLCom.GarageDoorExtensionsBackend.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlogEivindGLCom.GarageDoorExtensionsBackend.Services.Migrations
{
    [DbContext(typeof(GarageDoorExtensionsDbContext))]
    [Migration("20250725154837_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("BlogEivindGLCom.GarageDoorExtensionsBackend.Model.Apartment", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.ToTable("Apartments");
                });

            modelBuilder.Entity("BlogEivindGLCom.GarageDoorExtensionsBackend.Model.Door", b =>
                {
                    b.Property<string>("DoorId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("DoorId");

                    b.ToTable("Doors");
                });

            modelBuilder.Entity("BlogEivindGLCom.GarageDoorExtensionsBackend.Model.RfidCard", b =>
                {
                    b.Property<string>("Rfid")
                        .HasColumnType("TEXT");

                    b.Property<string>("BelongingApartment")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BelongingUserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Rfid");

                    b.ToTable("RfidCards");
                });

            modelBuilder.Entity("BlogEivindGLCom.GarageDoorExtensionsBackend.Model.RfidUser", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Apartment")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("RfidUsers");
                });

            modelBuilder.Entity("RfidCardValidForDoor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DoorId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Rfid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DoorId");

                    b.HasIndex("Rfid");

                    b.ToTable("RfidCardValidForDoors");
                });

            modelBuilder.Entity("RfidCardValidForDoor", b =>
                {
                    b.HasOne("BlogEivindGLCom.GarageDoorExtensionsBackend.Model.Door", null)
                        .WithMany()
                        .HasForeignKey("DoorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlogEivindGLCom.GarageDoorExtensionsBackend.Model.RfidCard", null)
                        .WithMany()
                        .HasForeignKey("Rfid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
